/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: visualdiscette (https://sketchfab.com/visualdiscette)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/old-tv-3fb1a4b9d14c44abaac69fec119bf251
Title: Old TV
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    TV_buttonWhite_0: THREE.Mesh;
    TV_Buttons_0: THREE.Mesh;
    TV001_Base_0: THREE.Mesh;
    TV002_Base_0: THREE.Mesh;
    TV003_Glass_0: THREE.Mesh;
    TV004_baseBack_0: THREE.Mesh;
    TV005_Base_0: THREE.Mesh;
    TV006_baseBack_0: THREE.Mesh;
    TV007_baseBack_0: THREE.Mesh;
    TV008_baseBack_0: THREE.Mesh;
    TV011_glassBack_0: THREE.Mesh;
    BezierCurve_Wire_0: THREE.Mesh;
    TV009_baseBack_0: THREE.Mesh;
    TV009_Metal_0: THREE.Mesh;
  };
  materials: {
    buttonWhite: THREE.MeshStandardMaterial;
    Buttons: THREE.MeshStandardMaterial;
    Base: THREE.MeshStandardMaterial;
    Glass: THREE.MeshStandardMaterial;
    baseBack: THREE.MeshStandardMaterial;
    glassBack: THREE.MeshStandardMaterial;
    Wire: THREE.MeshStandardMaterial;
    Metal: THREE.MeshStandardMaterial;
  };
};

export default function OldTvModel(props: React.ComponentProps<"group">) {
  const { nodes, materials } = useGLTF(
    "/oldtv/scene.gltf"
  ) as unknown as GLTFResult;
  const groupRef = useRef<THREE.Group>(null);
  return (
    <group ref={groupRef} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.TV_buttonWhite_0.geometry}
          material={materials.buttonWhite}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.TV_Buttons_0.geometry}
          material={materials.Buttons}
        />
      </group>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.TV009_baseBack_0.geometry}
          material={materials.baseBack}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.TV009_Metal_0.geometry}
          material={materials.Metal}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.TV001_Base_0.geometry}
        material={materials.Base}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.TV002_Base_0.geometry}
        material={materials.Base}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.TV003_Glass_0.geometry}
        material={materials.Glass}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.TV004_baseBack_0.geometry}
        material={materials.baseBack}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.TV005_Base_0.geometry}
        material={materials.Base}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.TV006_baseBack_0.geometry}
        material={materials.baseBack}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.TV007_baseBack_0.geometry}
        material={materials.baseBack}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.TV008_baseBack_0.geometry}
        material={materials.baseBack}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.TV011_glassBack_0.geometry}
        material={materials.glassBack}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.BezierCurve_Wire_0.geometry}
        material={materials.Wire}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
    </group>
  );
}

useGLTF.preload("/oldtv/scene.gltf");
